{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bc9774ab_bc1d82b4",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-04-05T19:34:06Z",
      "side": 1,
      "message": "I think what you are describing is the desire to write software that supports more than one older schema at a time, as supporting future schemas is unlikely without upgrading your users.",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b8961e3_2882ee67",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-04-06T10:20:57Z",
      "side": 1,
      "message": "Luca told me this was related to the idea to use protobuf in the event-stream.\n\nWhile I am generally supportive of that idea, I think it wouldn\u0027t address the problems you are citing.\n\nIn general, we don\u0027t want to rename fields or change their types, not because this makes rolling upgrades harder, but because it breaks all clients that connect to the server. We already try to not break them by making changes in a backward compatible way.\n\nWith protobuf, you get\n\n* cross-language bindings\n* immutable Java datastructures (assuming we\u0027re not using nanoproto)\n* performant binary serialization\n* unknown fields that survive (de)serialization\n* decoupling of binary format and data-structures (allowing renames, and switching between singular and repeated fields)\n\nthese are valuable properties, but I don\u0027t see how these relate this the problem you\u0027re trying to solve.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 76
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b485e9c_bb353f3a",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "Yes, this is about using protobuf as a serialisation framework for Gerrit Events(not only for stream events). I didn\u0027t want to mention the solution in this part of the proposal.\n\n\u003e In general, we don\u0027t want to rename fields or change their types, not because this makes rolling upgrades harder, but because it breaks all clients that connect to the server. We already try to not break them by making changes in a backward compatible way.\n\nThe idea is that for existing clients we want to keep the same JSON format. But new clients could use ProtoBuf. Even with protobuf we have to be careful with schema changes but it will give us much more flexibility comparing to pure JSON. \n\nhttps://developers.google.com/protocol-buffers/docs/proto3#updating\n\nI understand that removing fields is controversial because all clients need to be able to handle this situation( they will get default value instead of the real one). But fields renaming should be fine. Protobuf uses field id instead of the field name so rename operation is safe.",
      "parentUuid": "8b8961e3_2882ee67",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 76
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "055e0be8_87de4177",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-04-06T17:09:38Z",
      "side": 1,
      "message": "\u003e Even with protobuf we have to be careful with schema changes but it will give us much more flexibility comparing to pure JSON. \n\nif you start supporting both protobuf *and* json separately, that will double the amount of machinery that we have to maintain. Also, there is a risk that the JSON and PB API will start to diverge in subtle ways. This is what you want (\"flexibility\"), but this is confusing to users, and also causes extra work (documentation!) Is that really what we want? \n\nWhen we were at Google thinking about protobufs, the plan was to use protobuf internally, and then generate JSON from the internal protobuf representation. This provides \n\n* language bindings\n* immutable java data structures\n\nbut it constrains the protobuf data type, because it has to move exactly in concert with the JSON types.",
      "parentUuid": "0b485e9c_bb353f3a",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 76
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7efa2f6_80128b1b",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2021-04-09T08:31:48Z",
      "side": 1,
      "message": "My premises (which might be faulty) is that:\n1. protobuf basically handle two things:\n   * Specification\n   * Serialization/Deserialization\n2. protbuf supports automatic generation of documentation (?)\n3. Event structure is specified with protobuf, Gerrit core only uses protobuf for serialization/deserialization.\n4. The event-structure is ~constant within stable branches.\n\nIf this is correct (which it might as well isn\u0027t) shouldn\u0027t it be a matter of:\n* Define all event types with protobuf .\n* Core Gerrit only deals with protobuf for serialization.\n* As part of generating Documentation we generate documentation of the \"event-structure\" as well.\n\n* Plugins (f.i. rabbitmq, kafka) may serialize the events to JSON instead of protobuf if they so choose.\n* Plugins that expose the events as JSON could opt to generate JSON-versions of the event documentation themselves (perhaps a generate-json-events-documentation plugin that they all inherit from).\n* For backwards compatibility a \"ssh-stream-events\" plugin that serializes the events to JSON should do the trick.\n\nWith a clear protobuf specification we should be able to more-or-less do a diff between f.i. 3.7 and 3.8 to get a clear picture of what changed between the major versions.",
      "parentUuid": "055e0be8_87de4177",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 76
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cd8019d_df898fd0",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-23T06:03:41Z",
      "side": 1,
      "message": "All those are valid points to discuss but I believe this discussion should happen in the solution part. We are focusing on protobuf and going into the implementation details but the purpose of this document is to define the use-cases.",
      "parentUuid": "c7efa2f6_80128b1b",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 76
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec915a0c_2400d47d",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-24T00:45:45Z",
      "side": 1,
      "message": "+1, marking this as resolved and feel free to raise it on the solution change.",
      "parentUuid": "1cd8019d_df898fd0",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 76
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "277ba695_56b286fd",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-03T01:42:28Z",
      "side": 1,
      "message": "workarounded",
      "range": {
        "startLine": 19,
        "startChar": 48,
        "endLine": 19,
        "endChar": 58
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3b78ca5_a08e4273",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-05T20:38:53Z",
      "side": 1,
      "message": "I think \"worked around\" is what you\u0027re looking for.",
      "parentUuid": "277ba695_56b286fd",
      "range": {
        "startLine": 19,
        "startChar": 48,
        "endLine": 19,
        "endChar": 58
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f0fa7ed_81dce679",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-06T07:57:29Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e3b78ca5_a08e4273",
      "range": {
        "startLine": 19,
        "startChar": 48,
        "endLine": 19,
        "endChar": 58
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a19a9c1c_82080c41",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e3b78ca5_a08e4273",
      "range": {
        "startLine": 19,
        "startChar": 48,
        "endLine": 19,
        "endChar": 58
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da38c911_08cc7d08",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-04-06T10:20:57Z",
      "side": 1,
      "message": "Are you sure that this is really the problem? You\u0027re implying that the size of the JSON payloads saturates the SSH connection, which on my laptop does ~50M/sec. You can send a lot of JSON in 50 mbyte / second.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 83
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21970f9f_be90e14a",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-05-12T23:07:03Z",
      "side": 1,
      "message": "@Marcin are you planning to provide some numbers and impacts on performance?\n- JVM Heap and JVM GC JSON serialisation/deserialisation\n- System load impact\n- Network impact",
      "parentUuid": "da38c911_08cc7d08",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 83
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4711c8a8_da3a3768",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-04-05T19:34:06Z",
      "side": 1,
      "message": "This is a strange thing to put in this doc, as it seems unrelated to everything else and is not mentioned as a use case to improve?",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0df68e5d_3d083415",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-06T07:57:29Z",
      "side": 1,
      "message": "I believe Marcin mentions the reduction of the payload size, do you find this a strange requirement?",
      "parentUuid": "4711c8a8_da3a3768",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15578f93_f5c6839c",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "Exactly, I wanted to point out that current solution is verbose and can caused and issue for large setups",
      "parentUuid": "0df68e5d_3d083415",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1afb3850_a8596ef6",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2021-04-08T20:21:08Z",
      "side": 1,
      "message": "Probably we are either trying to tackle 2 different issues, i.e.: events forward/backward compatibility and events payload dimension, or maybe we need to clarify the reduction of the \"payload size\" might be a by-product of addressing the main issue.",
      "parentUuid": "15578f93_f5c6839c",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70e436c8_ba655efa",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-10T02:51:21Z",
      "side": 1,
      "message": "Not really IMHO, they are linked together though:\n\n*IF* you move to a binary format, then you *HAVE TO* introduce a schema, otherwise you don\u0027t know how to deserialise the data.\n\nP.S. Bear in mind that with the current JSON format, the majority of the payload is clutter. We could have 60-70% payload reduction IMHO.",
      "parentUuid": "1afb3850_a8596ef6",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6253124d_32a69a98",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-04-12T10:44:26Z",
      "side": 1,
      "message": "\u003e P.S. Bear in mind that with the current JSON format, the majority of the payload is clutter. We could have 60-70% payload reduction IMHO.\n\nmy question still stands. How is the payload size at all relevant? If you care about size reduction, the fastest way to address this is enabling zlib compression on the SSH connection.\n\n```\n$ curl \u0027https://gerrit-review.googlesource.com/changes/301923?o\u003dLABELS\u0026o\u003dALL_REVISIONS\u0027 \u003e txt\n\n$ ls -l txt\n-rw-r----- 1 hanwen primarygroup 2015 Apr 12 12:43 txt\n\n$ gzip txt\n\n$ ls -l txt.gz \n-rw-r----- 1 hanwen primarygroup 811 Apr 12 12:43 txt.gz\n```",
      "parentUuid": "70e436c8_ba655efa",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea549ab8_fc7cac4a",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-13T01:05:26Z",
      "side": 1,
      "message": "Data structures are binary in memory, then you expand them in memory as JSON, creating lots of object in the JVM Heap, for then compressing them again in memory to send them to the wire and make then small again. Yes, the current systems works, slowly and ineffectively.\n\nMoving to a more efficient, self-describing and safer binary encoding, would allow more speed, less latency and less system overhead.\n\nI believe it should be fairly easy then, at the solution stage, to demonstrate this.\n\nP.S. I believe that\u0027s the same reason why companies like Google moved to Protobufs in GRPC and BigData processing moved to Avro encoding rather than sticking with JSON.\n\nYes, that needs to be made more explicit in the use-cases and requirements, I agree.",
      "parentUuid": "6253124d_32a69a98",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9440793e_68479834",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-04-13T09:49:37Z",
      "side": 1,
      "message": "\u003e Data structures are binary in memory, ..\n\n(I know how protobuf works)\n\n\u003e Moving to a more efficient, self-describing and safer binary encoding, would allow more speed, less latency and less system overhead.\n\nMy experience is that rewriting code for performance reasons should always start from measurements. If you don\u0027t know how fast/slow it is today, you won\u0027t know if the improvement is worthwhile. How much time does a typical Gerrit server spend in GSON ?\n\n\u003e P.S. I believe that\u0027s the same reason why companies like Google moved to Protobufs in GRPC and BigData processing moved to Avro encoding rather than sticking with JSON.\n\nProtocol buffers were created in Oct 2000, long before JSON existed. From the Google perspective, there isn\u0027t a \"move from JSON to protobuf\". \n\nOriginally, protobuf provided a mechanism to upgrade services without downtime, because the client and server can ignore unknown fields. This is a benefit that Marcin hints at, but it\u0027s something that JSON also provides.",
      "parentUuid": "ea549ab8_fc7cac4a",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f7ad99b_38bb643d",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-13T16:22:43Z",
      "side": 1,
      "message": "It would be best to stay focused on the purpose of this document, which is defining the use-cases. Protobufs are part of the solution, therefore it is premature to discuss them here.\n\nIf the performance / memory footprint is part of the requirements, yes, I agree it needs to be accompanied with numbers.",
      "parentUuid": "9440793e_68479834",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fe020d3_42d83b0c",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-23T06:03:41Z",
      "side": 1,
      "message": "I agree it should be measured but in my opinion this comparison should be done in a solution phase. The size reduction is kind of a side effect of using more efficient serialisation/deserialisation method. I\u0027ve mentioned it here because I thought that it would be worth to point out that aspect as well. But again main focus is on providing the contract.",
      "parentUuid": "8f7ad99b_38bb643d",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5836c860_484c06ea",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-24T00:45:45Z",
      "side": 1,
      "message": "True, here you are just referring that the current solution (JSON format) is verbose, which is undeniable.\n\nMarking this as resolved, feel free to raise it again on the solution document.",
      "parentUuid": "1fe020d3_42d83b0c",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efe59d07_1f66d8ea",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-24T15:30:09Z",
      "side": 1,
      "message": "I think this part of the discussion is unresolved. Comment from Han-Wen above:\n\n\u003e My experience is that rewriting code for performance reasons should always start from measurements. If you don\u0027t know how fast/slow it is today, you won\u0027t know if the improvement is worthwhile. \n\nDo we have any measurements that show a current problem? That is 100% applicable to the use case and independent of any solution.",
      "parentUuid": "5836c860_484c06ea",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2099723e_54a73726",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-28T23:25:42Z",
      "side": 1,
      "message": "True, the measurements and data is missing.",
      "parentUuid": "efe59d07_1f66d8ea",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9c45ade_2db8ab7f",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-04-05T19:34:06Z",
      "side": 1,
      "message": "I don\u0027t think this is fundamental to that use case. I believe the use cases in this section are all specific to the rolling upgrades use case? I think that MP is perhaps fundamental to rolling upgrades, but the other way around is not true.",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55ad5d46_e825daa7",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-06T07:57:29Z",
      "side": 1,
      "message": "I believe the compatibility is the major use-case, whilst the HA and MS are secondary effects or can be seen as a reason why we need a defined schema and associated compatibility definition and check.",
      "parentUuid": "a9c45ade_2db8ab7f",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcacd2c5_a5345713",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "Yes, the compatibility is the main use-case. HA and MS are the simplest use-cases to describe what we want to achieve",
      "parentUuid": "55ad5d46_e825daa7",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2410c437_5a5911e7",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-05-10T07:58:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bcacd2c5_a5345713",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b5b3b52_6c538f2e",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-04-04T09:54:29Z",
      "side": 1,
      "message": "nit: s/As a by product/As a product/ ?",
      "range": {
        "startLine": 40,
        "startChar": 17,
        "endLine": 40,
        "endChar": 33
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e942eb6_9d9306ab",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "https://en.wikipedia.org/wiki/By-product",
      "parentUuid": "7b5b3b52_6c538f2e",
      "range": {
        "startLine": 40,
        "startChar": 17,
        "endLine": 40,
        "endChar": 33
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "400a228e_f9fceb89",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-04-04T09:54:29Z",
      "side": 1,
      "message": "nit: two whitespaces",
      "range": {
        "startLine": 42,
        "startChar": 45,
        "endLine": 42,
        "endChar": 47
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27a9ad15_397c0210",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "400a228e_f9fceb89",
      "range": {
        "startLine": 42,
        "startChar": 45,
        "endLine": 42,
        "endChar": 47
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "656c29b3_594bb998",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-04-05T19:34:06Z",
      "side": 1,
      "message": "This sounds like an AC, not a use case.",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21e80db1_6c9f5bec",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-05T20:38:53Z",
      "side": 1,
      "message": "This seems like an overly broad statement. If you delete fields from the event that the integration relies upon, we would very much expect it to break, correct? Can you narrow this to (a) more specific use case(s)?",
      "range": {
        "startLine": 45,
        "startChar": 20,
        "endLine": 46,
        "endChar": 16
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "475a3db4_c634bb01",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-04-05T19:34:06Z",
      "side": 1,
      "message": "Sounds like a solution",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae21ce04_85fee543",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2021-04-08T20:21:08Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "475a3db4_c634bb01",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bde6f45_5212921f",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-10T02:51:21Z",
      "side": 1,
      "message": "Why not replacing \"schema\" with \"contract\" instead?",
      "parentUuid": "ae21ce04_85fee543",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "229aad24_87cc0045",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-23T06:03:41Z",
      "side": 1,
      "message": "done",
      "parentUuid": "4bde6f45_5212921f",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08db296e_e7c6d354",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-24T15:30:09Z",
      "side": 1,
      "message": "I don\u0027t think that wording change is sufficient to make this less of a solution. It does not describe a use case this is currently (un/poorly)satisfied.",
      "parentUuid": "229aad24_87cc0045",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "374e9ffd_aa862349",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-28T23:25:42Z",
      "side": 1,
      "message": "What about replacing \"contract\" with \"specification\"? Or is there any other wording that you would like here?",
      "parentUuid": "08db296e_e7c6d354",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdd04af2_22cb2f67",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-29T15:57:49Z",
      "side": 1,
      "message": "I\u0027m looking for wording that describes the problem. What is the problem with making third party code understand the Gerrit event stream?",
      "parentUuid": "374e9ffd_aa862349",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4589a931_04932833",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-30T00:53:49Z",
      "side": 1,
      "message": "The problem is not breaking \"unknowingly\" I believe.\n\nIf you look at two examples:\n- Gerrit Trigger Plugin\n- Gerrit Java API\n\nBoth are copy\u0026pasting code from the Gerrit code-base into their plugins, which is very very dangerous.\n\nHaving a clear specification and a standard way to validating it is the main goal I believe.\n\n@Marcin can you comment if my understanding is correct?",
      "parentUuid": "bdd04af2_22cb2f67",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2094fffb_a523a296",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2021-04-30T07:47:09Z",
      "side": 1,
      "message": "\u003e The problem is not breaking \"unknowingly\" I believe.\n\u003e \n\u003e If you look at two examples:\n\u003e - Gerrit Trigger Plugin\n\u003e - Gerrit Java API\n\u003e \n\u003e Both are copy\u0026pasting code from the Gerrit code-base into their plugins, which is very very dangerous.\nThat\u0027s not true, at least for the Gerrit Trigger plugin, there is no copy/paste:ing of Gerrit code in that plugin.\nIt uses the gerrit-events[1] lib that in turn uses documented Gerrit API:s (REST and Events[3]). Same as (I believe) f.i. Gerrit Code Review plugin does.\n\nMore generally problem-statements I would use:\n\n* Firstly, one of the issues with the current set-up is that, since stream-events was initially the only event producer available the events are documented as if they are only a part of the stream-events command. That reality have changed and the current situation is that we have an event structure that is exposed by various sources (stream-events, events-* plugins, ...). The event documentation should be more \"centralized\" to reflect this no matter what the future looks like.\n\n* Secondly, another issue is that Gerrit doesn\u0027t offer any \"event-handling-lib\", hence the need for others to create one [1] (or probably several). If we want to make it easier to consume events we should provide such a lib (I believe one of the solutions discussed in the comments has mechanism for providing something similar).\n\n* Thirdly (that have been raised before) the event entities and the REST entities are not the same although they represent the same thing. Aligning these would cut \"a lot\" of overhead (hard to measure but I believe it to be true).\n\n* Fourthly documentation of events and REST entities needs to be maintained manually. If we could specify these in a way that would make automatic rendering of the documentation we would also cut down on unnecessary work.\n\n* Fifthly it would be helpful if said events/REST was specified (in the code) in such a way that you could easily see what has changed when making a new release simply by doing a git diff between current and previous version. \n\n* Sixthly we have the issue that the event-structure have been patched over and over and it is (IMO) rather difficult to get a sense of what it looks like in it\u0027s current state. Basically it\u0027s due for an overhaul.\n\n[1] https://github.com/sonyxperiadev/gerrit-events\n[2] https://gerrit-review.googlesource.com/Documentation/rest-api.html\n[3] https://gerrit-review.googlesource.com/Documentation/cmd-stream-events.html\n\u003e \n\u003e Having a clear specification and a standard way to validating it is the main goal I believe.\n\u003e \n\u003e @Marcin can you comment if my understanding is correct?",
      "parentUuid": "4589a931_04932833",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "251793b8_97053fc0",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-30T15:10:04Z",
      "side": 1,
      "message": "\u003e \u003e The problem is not breaking \"unknowingly\" I believe.\n\u003e \u003e \n\u003e \u003e If you look at two examples:\n\u003e \u003e - Gerrit Trigger Plugin\n\u003e \u003e - Gerrit Java API\n\u003e \u003e \n\u003e \u003e Both are copy\u0026pasting code from the Gerrit code-base into their plugins, which is very very dangerous.\n\u003e That\u0027s not true, at least for the Gerrit Trigger plugin, there is no copy/paste:ing of Gerrit code in that plugin.\n\u003e It uses the gerrit-events[1] lib that in turn uses documented Gerrit API:s (REST and Events[3]). Same as (I believe) f.i. Gerrit Code Review plugin does.\n\u003e \n\u003e More generally problem-statements I would use:\n\u003e \n\u003e * Firstly, one of the issues with the current set-up is that, since stream-events was initially the only event producer available the events are documented as if they are only a part of the stream-events command. That reality have changed and the current situation is that we have an event structure that is exposed by various sources (stream-events, events-* plugins, ...). The event documentation should be more \"centralized\" to reflect this no matter what the future looks like.\n\u003e \n\u003e * Secondly, another issue is that Gerrit doesn\u0027t offer any \"event-handling-lib\", hence the need for others to create one [1] (or probably several). If we want to make it easier to consume events we should provide such a lib (I believe one of the solutions discussed in the comments has mechanism for providing something similar).\n\u003e \n\u003e * Thirdly (that have been raised before) the event entities and the REST entities are not the same although they represent the same thing. Aligning these would cut \"a lot\" of overhead (hard to measure but I believe it to be true).\n\u003e \n\u003e * Fourthly documentation of events and REST entities needs to be maintained manually. If we could specify these in a way that would make automatic rendering of the documentation we would also cut down on unnecessary work.\n\u003e \n\u003e * Fifthly it would be helpful if said events/REST was specified (in the code) in such a way that you could easily see what has changed when making a new release simply by doing a git diff between current and previous version. \n\u003e \n\u003e * Sixthly we have the issue that the event-structure have been patched over and over and it is (IMO) rather difficult to get a sense of what it looks like in it\u0027s current state. Basically it\u0027s due for an overhaul.\n\u003e \n\u003e [1] https://github.com/sonyxperiadev/gerrit-events\n\u003e [2] https://gerrit-review.googlesource.com/Documentation/rest-api.html\n\u003e [3] https://gerrit-review.googlesource.com/Documentation/cmd-stream-events.html\n\u003e \u003e \n\u003e \u003e Having a clear specification and a standard way to validating it is the main goal I believe.\n\u003e \u003e \n\u003e \u003e @Marcin can you comment if my understanding is correct?\n\nThank you Sven and Luca for trying to clarify this. I think this is good progress. The part that is still mostly missing for me is what situation anyone has *now* where some/all of the 6 points Sven has are relevant. For example, I think anyone adding or improving code for events or REST APIs could be affected by the 4th. Folks maintaining tools that use REST APIs or events could be affected by the fifth (which I would word as \"It\u0027s hard to know what and how REST APIs and events have changed between releases\"). Etc.\n\n@Marcin, what situation do you have that you want solved?",
      "parentUuid": "2094fffb_a523a296",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec8405fb_4e476a03",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-30T18:17:01Z",
      "side": 1,
      "message": "@Sven, with regards to [1] (gerrit-events) library, it isn\u0027t a *mere* copy\u0026paste but a *logical* copy\u0026paste of Gerrit events [4]: that is equally dangerous because they would go out of sync easily.\n\nOne of the problems that we *always* face when migrating Gerrit is the compatibility with other systems that rely on stream events: the gerrit-trigger-plugin is typically the major offender (without being guilty of course).\n\nEither we just delegate the responsibility of this to the 3rd party tool (gerrit-events, gerrit-code-review-plugin, Gerrit Java API, you-name-it) OR we tackle the problem once and for all in Gerrit, which is basically what Marcin has volunteered to do.\n\n@Marcin the question that @Nasser is asking a very important one: of *ALL these problems* which are the ones we want to tackle with this design document?\n\n[4] https://github.com/sonyxperiadev/gerrit-events/tree/master/src/main/java/com/sonymobile/tools/gerrit/gerritevents/dto/events",
      "parentUuid": "251793b8_97053fc0",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fb418e2_690ff5ee",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-30T20:03:20Z",
      "side": 1,
      "message": "\u003e @Marcin the question that @Nasser is asking a very important one: of *ALL these problems* which are the ones we want to tackle with this design document?\n\nTo be clear, that\u0027s not what I asked and I don\u0027t think the answer to that question would help move this forward. I said:\n\n\u003e @Marcin, what situation do you have that you want solved?\n\nSo, not what generic problem exists for Marcin, but what is Marcin trying to do such that he is encountering one of the pain points Sven laid out. Example: \"I\u0027m creating a new tool that will use Gerrit REST APIs\", \"I\u0027m updating existing software that uses events to support more Gerrit versions than it previously did\", or any number of other things. But something specific Marcin is doing (you know, a use case).",
      "parentUuid": "ec8405fb_4e476a03",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "780d356f_f7bde776",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-05-21T11:42:25Z",
      "side": 1,
      "message": "I\u0027ve added some examples in the Use-cases section I hope that it will put more light on the real life problems I want to tackle with the change proposed in this document",
      "parentUuid": "5fb418e2_690ff5ee",
      "range": {
        "startLine": 48,
        "startChar": 34,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7de067de_0d4b9f25",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-04-05T19:34:06Z",
      "side": 1,
      "message": "Can you give an example of what this means to you, because I suspect \"easy\" means different things to different people?",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d305fd51_11927732",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-05T20:38:53Z",
      "side": 1,
      "message": "This doesn\u0027t describe a problem or use case that isn\u0027t already solved. I think you can are hinting at a problem (maybe those integrations are fragile?), but I have to guess currently.",
      "range": {
        "startLine": 48,
        "startChar": 3,
        "endLine": 49,
        "endChar": 50
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "332a68d3_7a7a1daa",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "Currently each client has to implement it\u0027s own domain classes when deserializing Gerrit Events. With events schema this code can be generated. If you check the most popular schema evolution frameworks(ProtoBuf, Avro, Thrift) they all supports that. For example ProtoBuf can generate domain classes from the schema for:\nC++, Java (including JavaNano, a dialect intended for low-resource environments), Python, Go, Ruby, Objective-C, C#, JavaScript, Ballerina, C, Dart, Elixir, Erlang, Haskell, Perl, PHP, R, Rust, Scala, Swift, Julia and Nim.\n\nI didn\u0027t want to give more details to avoid suggesting the solution.",
      "parentUuid": "7de067de_0d4b9f25",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "043be1db_92a4050a",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-05-10T07:58:32Z",
      "side": 1,
      "message": "Solved in Real life use cases section https://gerrit-review.googlesource.com/c/homepage/+/302082/4/pages/design-docs/events-compatibility/use-cases.md#54",
      "parentUuid": "d305fd51_11927732",
      "range": {
        "startLine": 48,
        "startChar": 3,
        "endLine": 49,
        "endChar": 50
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37cef9c8_ce3b1834",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-05-10T07:58:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "332a68d3_7a7a1daa",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "048272e6_faccb6b0",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-05-21T11:42:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "043be1db_92a4050a",
      "range": {
        "startLine": 48,
        "startChar": 3,
        "endLine": 49,
        "endChar": 50
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e3e961a_fbd1701e",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-04-05T19:34:06Z",
      "side": 1,
      "message": "Here is an example of where you are specifying a solution as a use case, yet that use case is NOT inherently met by that solution \"having events schema\". If you want to support code generation, then I think it should be in your AC (but not \"schema\").",
      "range": {
        "startLine": 51,
        "startChar": 44,
        "endLine": 51,
        "endChar": 51
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80b8138f_0553b38b",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-24T00:45:45Z",
      "side": 1,
      "message": "I believe contract resolves the issue raised.",
      "parentUuid": "1e3e961a_fbd1701e",
      "range": {
        "startLine": 51,
        "startChar": 44,
        "endLine": 51,
        "endChar": 51
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c1cd98b_29b79fb5",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-29T15:57:49Z",
      "side": 1,
      "message": "It does not. \"automation code generation\" does sound like part of a use case and it\u0027d be great to see the rest of it. Everything after \"-\" is a proposed (high level) solution for how to have automatic code generation.",
      "parentUuid": "80b8138f_0553b38b",
      "range": {
        "startLine": 51,
        "startChar": 44,
        "endLine": 51,
        "endChar": 51
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43c1fbe9_b429aa0d",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-05T20:38:53Z",
      "side": 1,
      "message": "Can you describe the use cases where this kind of manual coding is happening currently? (or if none exist yet, where you think it would be needed)",
      "range": {
        "startLine": 52,
        "startChar": 53,
        "endLine": 52,
        "endChar": 86
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b398c258_98c369fb",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "For example if you check https://gerrit.googlesource.com/gerrit/+/refs/heads/master/java/com/google/gerrit/server/events/EventGsonProvider.java it has few type adapters like EventDeserializer. So if someone wants to deserialize the event he needs to be aware of that custom logic.",
      "parentUuid": "43c1fbe9_b429aa0d",
      "range": {
        "startLine": 52,
        "startChar": 53,
        "endLine": 52,
        "endChar": 86
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3afc03c_08defc6b",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-06T15:26:14Z",
      "side": 1,
      "message": "Ok. Is Gerrit duplicating that logic in multiple areas? Are any applications other than Gerrit doing that? If no to both, I\u0027m still confused as to what the \"problem\" is that you\u0027re expressing here.",
      "parentUuid": "b398c258_98c369fb",
      "range": {
        "startLine": 52,
        "startChar": 53,
        "endLine": 52,
        "endChar": 86
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0d4effd_a2db153a",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-23T06:03:41Z",
      "side": 1,
      "message": "In my opinion every client which is consuming stream events must be aware of this custom logic. Problem is that this logic is not documented anywhere. Plus every client needs to implement it.",
      "parentUuid": "a3afc03c_08defc6b",
      "range": {
        "startLine": 52,
        "startChar": 53,
        "endLine": 52,
        "endChar": 86
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef28912b_64e5ef98",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-24T00:45:45Z",
      "side": 1,
      "message": "See for instance a duplication in the Jenkins plugin:\nhttps://github.com/sonyxperiadev/gerrit-events/tree/master/src/main/java/com/sonymobile/tools/gerrit/gerritevents/dto/events",
      "parentUuid": "b0d4effd_a2db153a",
      "range": {
        "startLine": 52,
        "startChar": 53,
        "endLine": 52,
        "endChar": 86
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d363b5d_33bfe4a6",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-29T15:57:49Z",
      "side": 1,
      "message": "Ok. Can you use that as a specific use case then? Or do you have another case where *you* need to manually implement it?\n\nMy reasoning here is simple, I\u0027m much more compelled by your actual needs vs hypothetical ones. So if you say right now: \"I\u0027m creating tool X and I don\u0027t want to manually reproduce the custom logic in EventGsonProvider, but I need my tool to understand it\" that is a VERY clear use case that I can evaluate solutions for. If you don\u0027t have that specific of a use case, I don\u0027t think this design doc should move forward.",
      "parentUuid": "ef28912b_64e5ef98",
      "range": {
        "startLine": 52,
        "startChar": 53,
        "endLine": 52,
        "endChar": 86
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b314479f_543f3837",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-05-10T07:58:32Z",
      "side": 1,
      "message": "I\u0027ve added Real Life use cases section https://gerrit-review.googlesource.com/c/homepage/+/302082/4/pages/design-docs/events-compatibility/use-cases.md#54",
      "parentUuid": "0d363b5d_33bfe4a6",
      "range": {
        "startLine": 52,
        "startChar": 53,
        "endLine": 52,
        "endChar": 86
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "168e01db_8a12fdb5",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-05-21T11:42:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b314479f_543f3837",
      "range": {
        "startLine": 52,
        "startChar": 53,
        "endLine": 52,
        "endChar": 86
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61c2171b_36ac49bd",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-04-04T09:54:29Z",
      "side": 1,
      "message": "nit: s/well-know/well-known/",
      "range": {
        "startLine": 56,
        "startChar": 33,
        "endLine": 56,
        "endChar": 42
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81ff6217_ef6e281b",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-04-05T19:34:06Z",
      "side": 1,
      "message": "Some of the criteria here seem to be dictating a solution (having a schema). It is best to word ACs as behavior you want to be able to support instead of implementations that you want. Otherwise the solution might provide the implementation that you specified and still not provide the behavior that you are seeking.",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58f32486_4167491d",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-05T20:38:53Z",
      "side": 1,
      "message": "What defines a well-known standard?",
      "parentUuid": "61c2171b_36ac49bd",
      "range": {
        "startLine": 56,
        "startChar": 33,
        "endLine": 56,
        "endChar": 42
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bfe0cfc_00a3cfb2",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58f32486_4167491d",
      "range": {
        "startLine": 56,
        "startChar": 33,
        "endLine": 56,
        "endChar": 42
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6767385c_974c4704",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-04-05T19:34:06Z",
      "side": 1,
      "message": "Forward compatibility is unlikely to be achievable 100%, so you may want to specify what sorts of changes you expect to be forward compatible.\n\nYou probably want to specify how far back you expect backward compatibility to go, i.e. I don\u0027t suspect you will support Gerrit 2.7?",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c75aca5_53a9f5cf",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "\u003e You probably want to specify how far back you expect backward compatibility to go, i.e. I don\u0027t suspect you will support Gerrit 2.7?\n\nThis is a new functionality so I believe it should be added on the master branch and be included in the next release.\n\n\u003e Forward compatibility is unlikely to be achievable 100%, so you may want to specify what sorts of changes you expect to be forward compatible.\n\nI don\u0027t want to discuss solution or technology here but if you look on the market standard technologies for schema evolution like ProtoBuf, Avro or Thrift they support almost the same backward/forward compatibility. Good comparison can be found here: https://martin.kleppmann.com/2012/12/05/schema-evolution-in-avro-protocol-buffers-thrift.html",
      "parentUuid": "6767385c_974c4704",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8a979f1_b94dde4c",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-24T00:45:45Z",
      "side": 1,
      "message": "@Marcin are you going to address Martin\u0027s comment on the limit of the applicability of the forward/backward contract compatibility?",
      "parentUuid": "3c75aca5_53a9f5cf",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1deebf9_65b92a62",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-03T01:42:28Z",
      "side": 1,
      "message": "reasons",
      "range": {
        "startLine": 59,
        "startChar": 54,
        "endLine": 59,
        "endChar": 60
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "729d433c_b1879574",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-04-05T19:34:06Z",
      "side": 1,
      "message": "This and the bullet below seems to assume a solution with two streams?",
      "parentUuid": "a1deebf9_65b92a62",
      "range": {
        "startLine": 59,
        "startChar": 54,
        "endLine": 59,
        "endChar": 60
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e9ba976_0d906d51",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-24T00:45:45Z",
      "side": 1,
      "message": "The \"contract\" wording resolves the issue raised.",
      "parentUuid": "729d433c_b1879574",
      "range": {
        "startLine": 59,
        "startChar": 54,
        "endLine": 59,
        "endChar": 60
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60b2e6d3_dfe0ba13",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-24T15:30:09Z",
      "side": 1,
      "message": "I don\u0027t believe changing to \u0027contract\u0027 resolves Martin\u0027s expressed concern. He specifically says \"a solution with two streams\" and nothing about schema.",
      "parentUuid": "2e9ba976_0d906d51",
      "range": {
        "startLine": 59,
        "startChar": 54,
        "endLine": 59,
        "endChar": 60
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e576ec0d_2dddc947",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-04-04T09:54:29Z",
      "side": 1,
      "message": "nit: selects in which format events should be generated.",
      "range": {
        "startLine": 60,
        "startChar": 36,
        "endLine": 61,
        "endChar": 23
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c467378_811845c6",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e576ec0d_2dddc947",
      "range": {
        "startLine": 60,
        "startChar": 36,
        "endLine": 61,
        "endChar": 23
      },
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70b5e056_0ae16c68",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-03T01:42:28Z",
      "side": 1,
      "message": "+ The format should be independent from the transport, allowing the same format to be reused across different channels:\n- SSH stream events\n- Webhooks\n- Other pub-sub events broker (e.g. RabbitMQ, Kafka, Kinesis, GCloud, others)",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "093949fe_f3034f94",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-04-05T22:46:49Z",
      "side": 1,
      "message": "\u003e + The format should be independent from the transport, allowing the same format to be reused across different channels:\n\u003e - SSH stream events\n\u003e - Webhooks\n\u003e - Other pub-sub events broker (e.g. RabbitMQ, Kafka, Kinesis, GCloud, others)\n\nI am glad that the use case is limited to events, as this helps focus things. I do think it would also make sense to suggest that it would be good if any solution provided to make rolling upgrades easier could also apply to other Gerrit interfaces such as the RestAPIs.",
      "parentUuid": "70b5e056_0ae16c68",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "576c891f_50e7c522",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-04-06T13:07:40Z",
      "side": 1,
      "message": "I agree with @Luca  this design doc is not focusing on the events stream but it\u0027s trying to provide generic format for all channels.",
      "parentUuid": "093949fe_f3034f94",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b00ad934_8d8b980c",
        "filename": "pages/design-docs/events-compatibility/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-24T00:45:45Z",
      "side": 1,
      "message": "I fully agree with Martin, nevertheless I also agree with Marcin in keeping the scope limited for this step.\n\n@Marcin would it make sense to address Martin\u0027s comment by adding a \"future work\" section?",
      "parentUuid": "576c891f_50e7c522",
      "revId": "cf39454840fb5a8449726af0a859f16ea8378e76",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}