{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "587c9162_f5644144",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3983987
      },
      "writtenOn": "2025-04-01T13:47:46Z",
      "side": 1,
      "message": "Really great design doc! ðŸ˜Š I think you probably want to hold off with most implementation work until git itself is convinced to support the change-id header as well. (Which may not happen at all!) But it\u0027s great to know for the Jujutsu project that there is a viable path for the ecosystem to standardize on this, so we can start pushing forward.",
      "revId": "f61711f49487062812afbe4e0fe8b334aafa9ad2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf02bd2d_681fcd7f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2025-04-01T14:15:08Z",
      "side": 1,
      "message": "Thanks for the review and giving us all the insights in the discussion! This was super helpful for us to understand how this could work!!\n\nIt would be great if git itself would support change-id headers. That would probably allow us to replace Gerrit Change-Id\u0027s completely in the long term, which sounds super exciting.\n\nFor Q2 we haven\u0027t planned to start working on the implementation (except maybe some experimental changes). Our idea is to consider this when we are making the plans for Q3. Hopefully until then we have more certainty that this is the way to go.\n\nThanks much for driving the overall effort on the standardisation. Much appreciated!",
      "parentUuid": "587c9162_f5644144",
      "revId": "f61711f49487062812afbe4e0fe8b334aafa9ad2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63d90724_eba946f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3983987
      },
      "writtenOn": "2025-04-01T16:09:34Z",
      "side": 1,
      "message": "Thank you, the conversation was just as informative for me. I\u0027m looking forward to getting in touch with the git contributors when the time is right.",
      "parentUuid": "cf02bd2d_681fcd7f",
      "revId": "f61711f49487062812afbe4e0fe8b334aafa9ad2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99849ec0_bbadaa62",
        "filename": "pages/design-docs/support-jujutsu/solution.md",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2025-04-02T06:36:31Z",
      "side": 1,
      "message": "```suggestion\n* When a change that has a Jujutsu change ID is cherry-picked using Gerrit\n  Gerrit records the source change (and maybe patchset) in NoteDb. If a\n```",
      "range": {
        "startLine": 67,
        "startChar": 62,
        "endLine": 68,
        "endChar": 16
      },
      "revId": "f61711f49487062812afbe4e0fe8b334aafa9ad2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "650a704a_6d6cc923",
        "filename": "pages/design-docs/support-jujutsu/solution.md",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 3983987
      },
      "writtenOn": "2025-04-01T13:47:46Z",
      "side": 1,
      "message": "Why not? I think Jujutsu works the same way Git does in this regard. The commit message is left intact by both of them, meaning the Change-Id footer is preserved.",
      "range": {
        "startLine": 149,
        "startChar": 2,
        "endLine": 150,
        "endChar": 36
      },
      "revId": "f61711f49487062812afbe4e0fe8b334aafa9ad2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7f11778_ca1cf024",
        "filename": "pages/design-docs/support-jujutsu/solution.md",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2025-04-01T14:15:08Z",
      "side": 1,
      "message": "Good question, I was not sure whether the missing change-id commit header would somehow derail Jujutsu. If that\u0027s not the case and the commit message is left intact, I agree it should just work.\n\nDoes Jujutsu assign a change ID in this case? I think this would be a reason to give Change-Id\u0027s from commit messages precedence over the Change ID from the commit message (see line 28-30), so that the existing change gets updated in this case.",
      "parentUuid": "650a704a_6d6cc923",
      "range": {
        "startLine": 149,
        "startChar": 2,
        "endLine": 150,
        "endChar": 36
      },
      "revId": "f61711f49487062812afbe4e0fe8b334aafa9ad2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c29e7570_89531913",
        "filename": "pages/design-docs/support-jujutsu/solution.md",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 3983987
      },
      "writtenOn": "2025-04-01T16:09:34Z",
      "side": 1,
      "message": "Yes, exactly. Jujutsu doesn\u0027t only store the change-id in the commit header (the PR to do that at all is still pending). The source of truth for the change-id is stored separately. When Jujutsu fetches a commit without the header, it will generate a new change-id, stored separately. I assume Jujutsu will add the header the next time the commit is amended / rebased.\n\nThe Change-Id footer taking precedence over the change-id header makes sense to me.",
      "parentUuid": "c7f11778_ca1cf024",
      "range": {
        "startLine": 149,
        "startChar": 2,
        "endLine": 150,
        "endChar": 36
      },
      "revId": "f61711f49487062812afbe4e0fe8b334aafa9ad2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "667805a0_978861e6",
        "filename": "pages/design-docs/support-jujutsu/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2025-04-02T06:36:31Z",
      "side": 1,
      "message": "add a link to a spec or definition what a reverse-hex ID is and why that was chosen ?",
      "range": {
        "startLine": 96,
        "startChar": 25,
        "endLine": 96,
        "endChar": 52
      },
      "revId": "f61711f49487062812afbe4e0fe8b334aafa9ad2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11f4a29e_c42b2b53",
        "filename": "pages/design-docs/support-jujutsu/use-cases.md",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 3983987
      },
      "writtenOn": "2025-04-02T06:54:33Z",
      "side": 1,
      "message": "I\u0027m not aware of documentation that describes reverse hex, but it\u0027s pretty simple: Hex with a different (\"reverse\") alphabet, namely \"zyxwvutsrqponmlk\" instead of the usual \"0123456789abcdef\".\n\nThe reason for choosing it as the standard is that Jujutsu uses it already and GitButler doesn\u0027t care, so they are fine with adopting it. The reason Jujutsu uses it in the first place is probably similar to your \"I\"-prefix: It allows Jujutsu to distinguish between change-id and commit hash without any overhead. Jujutsu users often type a short, unambiguous prefix of a change-id to refer to their commits, so it\u0027s useful that they can\u0027t be confused with commit hashes.",
      "parentUuid": "667805a0_978861e6",
      "range": {
        "startLine": 96,
        "startChar": 25,
        "endLine": 96,
        "endChar": 52
      },
      "revId": "f61711f49487062812afbe4e0fe8b334aafa9ad2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}