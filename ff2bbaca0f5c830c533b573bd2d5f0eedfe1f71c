{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7da4afe3_7c40c55e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-04-27T06:35:17Z",
      "side": 1,
      "message": "Submitting this, as I think the solution is well-enough described, including the pros \u0026 cons. Submitting this doesn\u0027t mean that this solution is accepted and will be implemented (the conclusion is done via the conclusion.md doc that\u0027s yet to be added, see [1]). Also further iterative improvements to this solution are possible.\n\n[1] https://gerrit-review.googlesource.com/Documentation/dev-design-docs.html",
      "revId": "ff2bbaca0f5c830c533b573bd2d5f0eedfe1f71c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bea10c87_24527325",
        "filename": "pages/design-docs/push-reviews/solution-google-2.md",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2022-04-27T08:50:28Z",
      "side": 1,
      "message": "This solution is not feasible. If you store the old SHA1 in the metadata, then after submitting the change (ie. effecting the ref update), the old SHA1 is no longer reachable through the normal refs. This means that the old data will not be fetchable, and it will be pruned/garbage collected on the next GC run.",
      "range": {
        "startLine": 67,
        "startChar": 13,
        "endLine": 67,
        "endChar": 18
      },
      "revId": "ff2bbaca0f5c830c533b573bd2d5f0eedfe1f71c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46ff9dae_e3001763",
        "filename": "pages/design-docs/push-reviews/solution-google-2.md",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2022-04-27T09:19:36Z",
      "side": 1,
      "message": "indeed, it would be necessary to keep a reflog-like structure, say refs/archived_heads/master_\u003cchange-number\u003e.\n\nnote that this would be no worry for any commits which have an associated gerrit change, as a patchset (supposedly) exists under refs/changes/ for every integrated commit.",
      "parentUuid": "bea10c87_24527325",
      "range": {
        "startLine": 67,
        "startChar": 13,
        "endLine": 67,
        "endChar": 18
      },
      "revId": "ff2bbaca0f5c830c533b573bd2d5f0eedfe1f71c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ff2bbaca0f5c830c533b573bd2d5f0eedfe1f71c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "ff2bbaca0f5c830c533b573bd2d5f0eedfe1f71c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ff2bbaca0f5c830c533b573bd2d5f0eedfe1f71c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}