{
  "comments": [
    {
      "key": {
        "uuid": "15e27575_47241fca",
        "filename": "_posts/2019-11-24-user-summit-sunnyvale-summary.md",
        "patchSetId": 6
      },
      "lineNbr": 242,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-01-21T08:20:46Z",
      "side": 1,
      "message": "### Stress your Gerrit with Gatling\n\nFabio Ponciroli (GerritForge), aka Ponch, showed the work on implementing a consistent\nend-to-end test scenario for Gerrit by leveraging the Gatling tool.\n\nTesting Gerrit involves the invocation of REST-API by simulating the PolyGerrit UI and\nalso the use of Git/HTTP and Git/SSH protocol. Gatling, however, does not support\nthe Git protocol out-of-the-box. Ponch has introduced the gatling-git project,\nthat extends Gatling to include the Git protocol.\n\nThe definition of end-to-end tests is further simplified by using the Gatling “feeders”.\nThose are sample data in JSON format, which can also be generated from existing\nGerrit production logs.\n\nPonch has then showcased, to Luca’s surprise, a real use-case of running load tests\nagainst GerritHub.io, and they generated the expected spike of incoming traffic.\n\nThis is a [post](https://gitenterprise.me/2019/12/20/stress-your-gerrit-with-gatling/),\nwith the video of the presentation, about the topic published on the GerritForge blog.",
      "revId": "7fb4ed4001b8861cddb692bf4e80138f96f77e27",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fe5ed81_297b334b",
        "filename": "_posts/2019-11-24-user-summit-sunnyvale-summary.md",
        "patchSetId": 6
      },
      "lineNbr": 242,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-01-21T16:08:28Z",
      "side": 1,
      "message": "Thanks @ponch, incorporated.",
      "parentUuid": "15e27575_47241fca",
      "revId": "7fb4ed4001b8861cddb692bf4e80138f96f77e27",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}