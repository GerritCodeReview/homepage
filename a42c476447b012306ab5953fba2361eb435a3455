{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "28384125_6c1100ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-03-16T13:54:13Z",
      "side": 1,
      "message": "Can Han-Wen edit the author of this change?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 31
      },
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59310266_269221cc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-16T14:07:09Z",
      "side": 1,
      "message": "Do you making Han-Wen the commit author?\nNot sure if this make sense since I wrote the doc?",
      "parentUuid": "28384125_6c1100ef",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 31
      },
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d62d10a_9e49f24a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-18T15:55:53Z",
      "side": 1,
      "message": "\u003e Not sure if this make sense since I wrote the doc?\n\nI think either way is fine. Git community would probably leave Edwin the author and use a footer line for this kind of use case (there are many that have been used in git, this one looks most relevant):\n\n Proposed-by: Han-Wen Nienhuys \u003chanwen@google.com\u003e",
      "parentUuid": "59310266_269221cc",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 31
      },
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcde93f0_1c27a9c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2022-03-16T12:17:20Z",
      "side": 1,
      "message": "looks good to publish.",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a67d9135_ca59ca80",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-16T12:32:57Z",
      "side": 1,
      "message": "Thanks, for the review. Done.",
      "parentUuid": "bcde93f0_1c27a9c7",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60769e28_32cf152d",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2022-03-16T13:13:14Z",
      "side": 1,
      "message": "maybe it would make sense to add a project level option allowing to configure a project to implicitly assume the push-review option for all direct pushes even if the client does not specify the push-review option",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f5631a5_9e9b4df6",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-16T14:07:09Z",
      "side": 1,
      "message": "Thanks for the suggestion. Yes, this makes sense to me, added it as an optional point.",
      "parentUuid": "60769e28_32cf152d",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4692db7e_49cbd9e9",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2022-03-16T16:21:28Z",
      "side": 1,
      "message": "caveats:\n\nIf you do that, the wire protocol will say \"success\", but the update wasn\u0027t applied. This will cause confusion if you have scripts run against the server, eg.\n\n```\n  git push origin -f HEAD:bla\n  git checkout foo \u0026\u0026 git pull origin bla\n```\n\nwill silently start producing different results.",
      "parentUuid": "8f5631a5_9e9b4df6",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9193cea5_4947dfa4",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2022-03-16T17:00:55Z",
      "side": 1,
      "message": "ok, we should avoid this",
      "parentUuid": "4692db7e_49cbd9e9",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12a8ca83_be48997b",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2022-03-16T13:13:14Z",
      "side": 1,
      "message": "a merge commit which is used to record the push review and that has",
      "range": {
        "startLine": 24,
        "startChar": 6,
        "endLine": 24,
        "endChar": 29
      },
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c99da8b_4f16f86a",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2022-03-16T13:13:14Z",
      "side": 1,
      "message": "did you consider to also have a client side representation of such merge commits ?",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5fcb45b_02b6b7b2",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-16T14:07:09Z",
      "side": 1,
      "message": "No, we didn\u0027t consider this yet. Do you mean letting the client create this merge commit and then push it to Gerrit (so that we do not need to create this merge commit automagically in Gerrit)?",
      "parentUuid": "7c99da8b_4f16f86a",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "142ded72_25ae0a70",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-16T14:07:09Z",
      "side": 1,
      "message": "Thanks. Done.",
      "parentUuid": "12a8ca83_be48997b",
      "range": {
        "startLine": 24,
        "startChar": 6,
        "endLine": 24,
        "endChar": 29
      },
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ce690ac_2fce22f4",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2022-03-16T14:56:31Z",
      "side": 1,
      "message": "No, creating the merge commit on the client side would probably add overhead for the user.\n\nI was thinking about if downloading the merge commit created on the server would buy us anything on the client side.",
      "parentUuid": "b5fcb45b_02b6b7b2",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ec92403_3eebf9fd",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-18T15:55:53Z",
      "side": 1,
      "message": "\u003e I was thinking about if downloading the merge commit created on the server would buy us anything on the client side.\n\nI think any verification of the change should use the commit that\u0027s going to be set on submit, so the merge commit isn\u0027t especially interesting to download. That said, how is a CI system expected to discover that info?",
      "parentUuid": "1ce690ac_2fce22f4",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b5dd084_76971486",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-21T13:48:38Z",
      "side": 1,
      "message": "\u003e I think any verification of the change should use the commit that\u0027s going to be \n\u003e set on submit\n\nWhy is this important? The merge commit has exactly the same content as the commit that\u0027s going to be set on submit. A CI system is only verifying the content, so for the CI it shouldn\u0027t matter which of the commits it gets?",
      "parentUuid": "9ec92403_3eebf9fd",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78a1edb6_625335b1",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2022-03-21T21:46:23Z",
      "side": 1,
      "message": "\u003e \u003e I think any verification of the change should use the commit that\u0027s going to be \n\u003e \u003e set on submit\n\u003e \n\u003e Why is this important? The merge commit has exactly the same content as the commit that\u0027s going to be set on submit. A CI system is only verifying the content, so for the CI it shouldn\u0027t matter which of the commits it gets?\n\nOur CI system verify exact commits, and also expect to potentially batch those commits in with other changes, how would it go about doing that?\n\nWhich brings up another question, how could someone upload a change that depends on a push review? I am thinking about an upstream vendor update to a branch that would be reviewed as a \"push review\", which needs some follow on changes to make it work with internal code. A CI system would likely want to verify the two changes and submit them together. How could they do that? i.e. That isn\u0027t listed as a use case you are trying to support, but it seems pretty important, perhaps it should be?",
      "parentUuid": "7b5dd084_76971486",
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "846c6e55_e7eafee0",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2022-03-16T13:13:14Z",
      "side": 1,
      "message": "I assume the client still has to use the push --force option for any non-fast-forward updates",
      "range": {
        "startLine": 43,
        "startChar": 41,
        "endLine": 43,
        "endChar": 80
      },
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8035fb34_f242762d",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-16T14:07:09Z",
      "side": 1,
      "message": "Our idea was that the client pushes without --force since the push only creates a change and doesn\u0027t apply the non-fast-forward update. The non-fast-forward update is only applied on submit, so the submitter should be required to have force push permissions in order to submit (that\u0027s the point above in l. 38, but it should say \u0027Force Push\u0027 permission instead of \u0027Push\u0027 permission there, fixed it in the new patch set).",
      "parentUuid": "846c6e55_e7eafee0",
      "range": {
        "startLine": 43,
        "startChar": 41,
        "endLine": 43,
        "endChar": 80
      },
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26640db7_ce101d3b",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2022-03-16T14:56:31Z",
      "side": 1,
      "message": "I think that non-fast-forward push should still be the exception. Making it look like an innocent fast-forward push on client side looks like a slippery slope.",
      "parentUuid": "8035fb34_f242762d",
      "range": {
        "startLine": 43,
        "startChar": 41,
        "endLine": 43,
        "endChar": 80
      },
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d642e0e4_025c06e9",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-18T15:55:53Z",
      "side": 1,
      "message": "\u003e I think that non-fast-forward push should still be the exception. Making it look like an innocent fast-forward push on client side looks like a slippery slope.\n\nI agree with Matthias here. I also think it benefits us to make this look/feel like a direct push still.",
      "parentUuid": "26640db7_ce101d3b",
      "range": {
        "startLine": 43,
        "startChar": 41,
        "endLine": 43,
        "endChar": 80
      },
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b77284c_744fc82f",
        "filename": "pages/design-docs/push-reviews/solution-google.md",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-21T13:48:38Z",
      "side": 1,
      "message": "Thanks, makes sense to me. Will update this with the next patch set.",
      "parentUuid": "d642e0e4_025c06e9",
      "range": {
        "startLine": 43,
        "startChar": 41,
        "endLine": 43,
        "endChar": 80
      },
      "revId": "a42c476447b012306ab5953fba2361eb435a3455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}