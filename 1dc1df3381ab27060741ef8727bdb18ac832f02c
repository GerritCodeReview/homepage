{
  "comments": [
    {
      "key": {
        "uuid": "cba0815e_f2339bd3",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "lightweight (one word)",
      "range": {
        "startLine": 33,
        "startChar": 65,
        "endLine": 33,
        "endChar": 77
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "689aca7d_fd88cccb",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-27T08:37:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cba0815e_f2339bd3",
      "range": {
        "startLine": 33,
        "startChar": 65,
        "endLine": 33,
        "endChar": 77
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf51524a_6d260720",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "Is this explicitly targeting the Prolog rules composition complexity?\nYou are planning to NOT allow that anymore?\nCan you make an explicit example of what it was possible before and won\u0027t be possible anymore?",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 70
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e06eec7d_c0459c98",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-27T08:37:23Z",
      "side": 1,
      "message": "Done. I don\u0027t want to make direct comparisons between Prolog and change queries, because there are endless possibilities of what is possible in prolog but not in change queries.\n\nI\u0027ve added examples to what we support and what we don\u0027t support.",
      "parentUuid": "bf51524a_6d260720",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 70
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aa0a0ea_56d08605",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "fulfilled doesn\u0027t really match IMHO with the description you are giving. I would rather use \u0027mandatory\u0027 or \u0027required\u0027",
      "range": {
        "startLine": 78,
        "startChar": 9,
        "endLine": 78,
        "endChar": 18
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c53e576_66cc60b8",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-27T08:37:23Z",
      "side": 1,
      "message": "I\u0027ve had a similar discussion with Sven and am a bit unsure about naming here myself. So far, though, fulfilled was the most expressive I could come up with. I read this as:\n\napplicable yes/no\nfulfilled yes/no\noverriden yes/no\n\nRequired sounds very similar to applicable to me and I would rather think that it means \"is this SR required or not\" and that some other condition would be used to determine if the SR is fulfilled / passing.\n\nWe had blocking before, which I think would also be OK, but fulfilled was more expressive at least to me.\n\nWDYT?",
      "parentUuid": "7aa0a0ea_56d08605",
      "range": {
        "startLine": 78,
        "startChar": 9,
        "endLine": 78,
        "endChar": 18
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b97a3d35_fea370a4",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "This looks very good to me: I always found confusing that at times the requirement was specified by a Prolog rule and, by default, by the label function. Making one single place where the submittability gets calculated allow to have less doubts of its execution and evaluation.",
      "range": {
        "startLine": 115,
        "startChar": 19,
        "endLine": 116,
        "endChar": 16
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63c6edca_e76c5490",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "This is cool ! I always found it very strange that we needed to re-evaluate submit rules so many times. Also, if the Prolog changes, what\u0027s the point of re-evaluating existing merged changes?",
      "range": {
        "startLine": 140,
        "startChar": 23,
        "endLine": 141,
        "endChar": 51
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b22a6296_c9debd83",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "Are you planning to still store its result in the index though?",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 144,
        "endChar": 20
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "538678c6_51dd1b53",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-27T08:37:23Z",
      "side": 1,
      "message": "Yes, that\u0027s already happening today, though. So I didn\u0027t call it out initially. Did so now.",
      "parentUuid": "b22a6296_c9debd83",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 144,
        "endChar": 20
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4974c6e1_ec38aa3e",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "What about the \"extra information\" that plugins were able to provide before?\n\nE.g. Owners plugin: the list of people that are entitled to be the \"owners\u0027 reviewers\" of some of the files of a change.",
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "694f6962_0fd17b55",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-27T08:37:23Z",
      "side": 1,
      "message": "I added this to future work. We\u0027d love to implement \"actions\" that plugin owners can expose and that turn into a button + follow up screen/menu on the unfulfilled actions.\n\nThis isn\u0027t possible today, so I wouldn\u0027t consider it a blocker, rather something we can do in the second iteration.\n\nTo be precise, today, you could expose a random string from Prolog that gets shown as a missing label, but this isn\u0027t a forum for showing a list of potential owners for example.",
      "parentUuid": "4974c6e1_ec38aa3e",
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce235476_52b3898a",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "Would a SSH command interaction still be available?\nCurrently you could develop a Prolog rule only by interacting over SSH, without having to do point-and-click on the GUI.",
      "range": {
        "startLine": 198,
        "startChar": 36,
        "endLine": 199,
        "endChar": 20
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c49774c4_8c00ba8f",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-27T08:37:23Z",
      "side": 1,
      "message": "There\u0027ll certainly be a REST endpoint which we could also wrap in an SSH command if desired. Since we don\u0027t use SSH at Google, this would need to be a community contribution, but I think it\u0027s not a lot of effort.",
      "parentUuid": "ce235476_52b3898a",
      "range": {
        "startLine": 198,
        "startChar": 36,
        "endLine": 199,
        "endChar": 20
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ffc9608_9568906a",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 213,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "We do need to make sure that the new migrated rules will be 100% functionally equivalent to the existing ones, to prevent bad surprises..\n\nWhat about reindexing? Would we keep the current submit record in the index or would we need to re-evaluate all the rules of all changes?",
      "range": {
        "startLine": 211,
        "startChar": 47,
        "endLine": 213,
        "endChar": 20
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77f00ea2_c53f6ff5",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 213,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-27T08:37:23Z",
      "side": 1,
      "message": "\u003e We do need to make sure that the new migrated rules will be 100% functionally equivalent to the existing ones, to prevent bad surprises..\n\nYep. For the default case (only labels) that\u0027s easy because we can test it extensively before the rollout. For custom prolog rules, it\u0027s harder and will require a manual migration as there is no way you can \"understand\" what prolog rules a project has programatically and turn that into a SR.\n\n\u003e What about reindexing?\nCurrently, this is a bit fuzzy: We index \u0027strict\u0027 and \u0027lenient\u0027 rule results. \u0027lenient\u0027 always takes a fresh result when the doc is indexed, no matter if the change is closed. So currently, that is a \u0027random state\u0027: If the change was not modified since it was merged, and the server did not undergo a full reindex of all changes, it has the state after submission.\n\n\u0027strict\u0027 will just say \u0027closed\u0027 if the change got reindexed after it got merged.\n\nSo there isn\u0027t much of historic data for us to reconstruct unfortunately. What I think we should do here is:\n1) For historic, closed changes. Show only the label votes. Nothing more (we don\u0027t have the data)\n2) For new changes, store the SR state upon submission and surface that.",
      "parentUuid": "2ffc9608_9568906a",
      "range": {
        "startLine": 211,
        "startChar": 47,
        "endLine": 213,
        "endChar": 20
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a68934c9_d151f76e",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 223,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "I am missing:\n\n4) Projects that use Prolog with plugin-provided additional predicates. What is the plans for those?",
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85d7dc1b_96995855",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 223,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-27T08:37:23Z",
      "side": 1,
      "message": "added: Plugins that currently expose a custom prolog fact will need to expose a custom submit predicate instead.\n\nWhat is key here is that we don\u0027t force anyone to migrate off of prolog. If they prefer, they can stay on prolog. Hopefully, we\u0027ll be able to extract the prolog interpreter into a plugin in the future. That plugin provides a \"is:prolog-rules-fulfilled\" predicate to fit in the new world.",
      "parentUuid": "a68934c9_d151f76e",
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6276d9f3_08740af0",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "What about the SSH interface to develop and test Prolog rules on Gerrit?",
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "246aca6c_9ff91795",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-27T08:37:23Z",
      "side": 1,
      "message": "Am I right in assuming plugins can contribute SSH commands? If so, the functionality will still be there.",
      "parentUuid": "6276d9f3_08740af0",
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad03c74d_fc30c2c5",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-26T22:45:12Z",
      "side": 1,
      "message": "Are we targeting then Gerrit v3.4?\nWould part of this be in Gerrit v3.3?",
      "range": {
        "startLine": 246,
        "startChar": 44,
        "endLine": 246,
        "endChar": 64
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2d076f9_60f564f9",
        "filename": "pages/design-docs/ci-reboot/solution-composable-submit-requirements.md",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-27T08:37:23Z",
      "side": 1,
      "message": "That depends purely on when the release is cut, I\u0027d rather say 3.4 for now to have it fully available. Amended the text.",
      "parentUuid": "ad03c74d_fc30c2c5",
      "range": {
        "startLine": 246,
        "startChar": 44,
        "endLine": 246,
        "endChar": 64
      },
      "revId": "1dc1df3381ab27060741ef8727bdb18ac832f02c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}