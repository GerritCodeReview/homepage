{
  "comments": [
    {
      "key": {
        "uuid": "03f2cb19_a699a95b",
        "filename": "pages/design-docs/instance-id/use-cases.md",
        "patchSetId": 23
      },
      "lineNbr": 1,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-05-06T12:41:12Z",
      "side": 1,
      "message": "permalink missing",
      "revId": "01e201f2076d88e482516c822e5d7c2bc164a708",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5595a468_0f5cb5cb",
        "filename": "pages/design-docs/instance-id/use-cases.md",
        "patchSetId": 23
      },
      "lineNbr": 30,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2020-04-23T00:37:44Z",
      "side": 1,
      "message": "Nasser, will it resolve your question if we reword this to something like \"Gerrit should provide a way to add the initial source of the event into events, so that plugin developers don\u0027t need to duplicate development effort to identify it\"?",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 41
      },
      "revId": "01e201f2076d88e482516c822e5d7c2bc164a708",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29f1b453_3283712a",
        "filename": "pages/design-docs/instance-id/use-cases.md",
        "patchSetId": 23
      },
      "lineNbr": 30,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-04-23T03:31:21Z",
      "side": 1,
      "message": "It probably helps. Right now, if I were trying to pick a solution for this, I\u0027d have a hard time. How would I pick any of these as the correct way to identify the initial source: using some kind of \"canonical service instance\", a geographical site, a specific IP, a DNS name, kubernetes pod name, AWS instance id?\n\nI think the problem (and then the AC) need to help clarify which of those would actually help solve the problem being experienced.",
      "parentUuid": "5595a468_0f5cb5cb",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 41
      },
      "revId": "01e201f2076d88e482516c822e5d7c2bc164a708",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91af835c_59c02d06",
        "filename": "pages/design-docs/instance-id/use-cases.md",
        "patchSetId": 23
      },
      "lineNbr": 30,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-23T12:04:40Z",
      "side": 1,
      "message": "\u003e I think the problem (and then the AC) need to help clarify which of those would actually help solve the problem being experienced.\n\nI believe Ponch included four possibly answers to the *WHY* the source is needed:\n1. Avoid loops\n2. Priority routing\n3. Troubleshooting\n4. Preventing duplications\n\nThere could be of course many more uses of the \"sender\" field of a message produced in a distributed system.\n\nI wouldn\u0027t hijack Ponch\u0027s work by adding possible solutions (geographical site, a specific IP, a DNS name, kubernetes pod name, AWS instance id) to the definition of the problem.\n\nAs I mentioned, if you do see any of the 4x *WHY* as valid or meaningful for your Gerrit setup and use-case, that\u0027s fine, we have possibly different problems and different challenges to tackle in our Gerrit setups.\n\nWe are running a plain-vanilla Gerrit v3.1.4 in multi-site, and we are facing this and many other challenges. That\u0027s why Ponch came up with this design proposal for the Gerrit community.\n\nI believe we should try to help and encourage people like Ponch coming up with designs and proposals. We want more designs, more ideas, more contributions for the community to thrive, isn\u0027t it?",
      "parentUuid": "29f1b453_3283712a",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 41
      },
      "revId": "01e201f2076d88e482516c822e5d7c2bc164a708",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}