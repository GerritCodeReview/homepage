{
  "comments": [
    {
      "key": {
        "uuid": "376d33b3_b6627877",
        "filename": "pages/design-docs/instance-id/solution.md",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-29T09:39:26Z",
      "side": 1,
      "message": "This also implies that Gerrit exposes the local instance-id to plugins, e.g. with a new @InstanceId annotation, so that a plugin could check the one received in the event with the local one injected.",
      "revId": "002115deadbdf737bc6aa0668ab5732075fccdbb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eba17f57_3c4ae118",
        "filename": "pages/design-docs/instance-id/solution.md",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-29T10:56:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "376d33b3_b6627877",
      "revId": "002115deadbdf737bc6aa0668ab5732075fccdbb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c410f24d_6cac5c04",
        "filename": "pages/design-docs/instance-id/solution.md",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-29T09:39:26Z",
      "side": 1,
      "message": "Does this mean that the collection of all the origins (instanceIds) should be then stored in a central repository or directory?\n\nSomething similar to what Kafka does for its nodes? (e.g. storing the brokers in a global key-value store)",
      "range": {
        "startLine": 72,
        "startChar": 47,
        "endLine": 72,
        "endChar": 57
      },
      "revId": "002115deadbdf737bc6aa0668ab5732075fccdbb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a632497_5001ee1e",
        "filename": "pages/design-docs/instance-id/solution.md",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-29T10:56:52Z",
      "side": 1,
      "message": "It means that will have the information to do it. The implementation can be as complex as Kafka in term of discoverability or simpler.",
      "parentUuid": "c410f24d_6cac5c04",
      "range": {
        "startLine": 72,
        "startChar": 47,
        "endLine": 72,
        "endChar": 57
      },
      "revId": "002115deadbdf737bc6aa0668ab5732075fccdbb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1de40a49_7ab2d54e",
        "filename": "pages/design-docs/instance-id/solution.md",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-29T09:39:26Z",
      "side": 1,
      "message": "This should be already possible today, as the events can be logged. So there isn\u0027t much to do for this to happen: just have the extra field in the event.",
      "range": {
        "startLine": 73,
        "startChar": 34,
        "endLine": 73,
        "endChar": 64
      },
      "revId": "002115deadbdf737bc6aa0668ab5732075fccdbb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f693fb1_fb513136",
        "filename": "pages/design-docs/instance-id/solution.md",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-29T10:56:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1de40a49_7ab2d54e",
      "range": {
        "startLine": 73,
        "startChar": 34,
        "endLine": 73,
        "endChar": 64
      },
      "revId": "002115deadbdf737bc6aa0668ab5732075fccdbb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b787f3b6_30da12cf",
        "filename": "pages/design-docs/instance-id/solution.md",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-29T09:39:26Z",
      "side": 1,
      "message": "This is somehow related to the first one, isn\u0027t it?",
      "revId": "002115deadbdf737bc6aa0668ab5732075fccdbb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c91b5bc4_cd9d62b3",
        "filename": "pages/design-docs/instance-id/solution.md",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-29T10:56:52Z",
      "side": 1,
      "message": "yep..it is kind of the dual of he first one. In this case if we are the instance production  an event we want to do something in the other case we want a noops.",
      "parentUuid": "b787f3b6_30da12cf",
      "revId": "002115deadbdf737bc6aa0668ab5732075fccdbb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}