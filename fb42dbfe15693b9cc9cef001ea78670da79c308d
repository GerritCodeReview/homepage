{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "baedd080_56aead9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-03-16T13:49:11Z",
      "side": 1,
      "message": "Thanks, @Edwin, for the proposal. See below my comments on security and audit implications.",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67fff80e_21844b56",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-16T16:51:40Z",
      "side": 1,
      "message": "nit: I think Gerrit typically calls this the \u0027destination\u0027 branch? (below too)",
      "range": {
        "startLine": 15,
        "startChar": 17,
        "endLine": 15,
        "endChar": 23
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "574aec89_adb1f1d8",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-17T14:21:55Z",
      "side": 1,
      "message": "I think we use \u0027target branch\u0027 and \u0027destination branch\u0027 synonymously. \u0027target branch\\|targetBranch\u0027 has 265 occurrences in our codebase, \u0027destination branch\\|destinationBranch\u0027 has 208 occurrences. FWIW I prefer \u0027target branch\u0027 since it\u0027s shorter, hence leaving this as it is.",
      "parentUuid": "67fff80e_21844b56",
      "range": {
        "startLine": 15,
        "startChar": 17,
        "endLine": 15,
        "endChar": 23
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8674749c_68af97d0",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-16T16:51:40Z",
      "side": 1,
      "message": "We also can\u0027t review fast forward updates without creating extra commits using \u0027merge --no-ff\u0027 (which I guess means they\u0027re not fast-forwards anymore). Note that here too?",
      "range": {
        "startLine": 21,
        "startChar": 14,
        "endLine": 21,
        "endChar": 38
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ade1198_ed284cbf",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-17T14:21:55Z",
      "side": 1,
      "message": "Right. Updated the text.",
      "parentUuid": "8674749c_68af97d0",
      "range": {
        "startLine": 21,
        "startChar": 14,
        "endLine": 21,
        "endChar": 38
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf4793bc_faa3e74c",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-16T16:51:40Z",
      "side": 1,
      "message": "nit: s/resets/sets/ ?",
      "range": {
        "startLine": 25,
        "startChar": 74,
        "endLine": 25,
        "endChar": 80
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a4d3737_bdd798d7",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-17T14:21:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf4793bc_faa3e74c",
      "range": {
        "startLine": 25,
        "startChar": 74,
        "endLine": 25,
        "endChar": 80
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65575952_2a34e04a",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-16T16:51:40Z",
      "side": 1,
      "message": "What about creation of a new branch via push?",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d50deb06_6c944dc8",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-17T14:21:55Z",
      "side": 1,
      "message": "From looking at requests to our systems branch creations are currently often handled like this:\n\n1. Create the branch with an initial empty commit (direct push)\n2. Create a merge change that merges the desired content into the new branch (Create Change REST endpoint using MergeInput)\n\u003d\u003e by creating a merge change the population of the new branch can be reviewed\n   \nDoing 1. should be possible without needing to do a direct push. My plan is to add a new option to the Create Branch REST endpoint so that it can create a new branch on an initial empty commit (orthogonal feature to this design).\n\nIf we have this you could use a push-review for 2. to populate the new branch with a specific SHA1 and review the push-review change.\n\nI added a section below to include this idea.",
      "parentUuid": "65575952_2a34e04a",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6c53b28_a1eafb44",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-16T16:51:40Z",
      "side": 1,
      "message": "Add a reference to https://slsa.dev/spec/v0.1/requirements#two-person-reviewed ?",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b60a452_1bfa971a",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-17T14:21:55Z",
      "side": 1,
      "message": "Nice. We are basically working on improving our compliance to a Google-version of SLSA. This design is part of these efforts.\n\nDone.",
      "parentUuid": "f6c53b28_a1eafb44",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00797c88_f7e4d115",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-16T16:51:40Z",
      "side": 1,
      "message": "Can you tie \u0027import\u0027 to git commands? For example, one way to import that would *not* be an interesting use case for this doc would be:\n\n cd my-repo/partner-drops\n tar xf partner-drop.tgz\n git add . \u0026\u0026 git commit -m \u0027Partner drop from YY-MM-DD\u0027\n git push origin HEAD:refs/for/...",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 52,
        "endChar": 14
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6870e079_a81a461b",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-17T14:21:55Z",
      "side": 1,
      "message": "Right. I rephrased this and hope it\u0027s better now?",
      "parentUuid": "00797c88_f7e4d115",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 52,
        "endChar": 14
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03f06f80_a3f3894d",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-03-16T13:49:11Z",
      "side": 1,
      "message": "This could be a *huge* diff. Imagine that someone make a forced-push for review of a substantial SHA1s gap: it would potentially resolve in a large number of files and changes.\n\nShould we also include a limit to this feature for preventing abuse or accidental pushes for reviews?",
      "range": {
        "startLine": 64,
        "startChar": 23,
        "endLine": 65,
        "endChar": 8
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc5d7ba6_4406cded",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-16T14:21:56Z",
      "side": 1,
      "message": "Yes, probably we want some sort of protection against abuse, but we haven\u0027t thought much about this yet (e.g. we could require a special permission for being able to upload push-reviews).",
      "parentUuid": "03f06f80_a3f3894d",
      "range": {
        "startLine": 64,
        "startChar": 23,
        "endLine": 65,
        "endChar": 8
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b5029c1_2a4e69b9",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2022-03-16T16:13:05Z",
      "side": 1,
      "message": "correct. We have a limit on the max number of files in a diff. I think that would kick in here as well.",
      "parentUuid": "bc5d7ba6_4406cded",
      "range": {
        "startLine": 64,
        "startChar": 23,
        "endLine": 65,
        "endChar": 8
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95422869_55473a29",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-16T16:51:40Z",
      "side": 1,
      "message": "If we think a \"large diff\" scenario is more likely with these use cases (and I think it is), maybe add an acceptance criteria related to handling large diffs in an acceptable way?",
      "parentUuid": "bc5d7ba6_4406cded",
      "range": {
        "startLine": 64,
        "startChar": 23,
        "endLine": 65,
        "endChar": 8
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7f54ede_cf8bfe38",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-17T14:21:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95422869_55473a29",
      "range": {
        "startLine": 64,
        "startChar": 23,
        "endLine": 65,
        "endChar": 8
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f9c4c25_efd89334",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-16T16:51:40Z",
      "side": 1,
      "message": "Always? or optionally?",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 67,
        "endChar": 45
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93f249fe_db6fadcf",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-17T14:21:55Z",
      "side": 1,
      "message": "Only if the submission results in a non-fast-forward update of the destination branch. Added this condition here.",
      "parentUuid": "8f9c4c25_efd89334",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 67,
        "endChar": 45
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cca7af83_6082a7d6",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-03-16T13:49:11Z",
      "side": 1,
      "message": "Does this also include also all the past history? (e.g. similarly to what ref-protection plugin does)",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 70,
        "endChar": 34
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c5223cc_cff6ecd4",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2022-03-16T13:54:55Z",
      "side": 1,
      "message": "this severely limits the usefulness of the feature. apart from the get-rid-of-huge-blobs case you already removed, getting rid of commits that _really_ shouldn\u0027t have been submitted in the first place also requires actually erasing history.\n\nso instead, i would suggest that you make that optional: it would be a checkbox on the review (whose state would have to be approved). changes without history preservation would be self-destructive: upon submission, the patchsets would be cleared (tbd: what about orphaned comments?).",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "882e2eed_b5be7f1c",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-16T14:21:56Z",
      "side": 1,
      "message": "The audit log should record that the branch was updated from old SHA1 to new SHA1. Since the old SHA1 references all the past history that\u0027s implicitly included.\nI\u0027m not familiar with the ref-protection plugin, is it this what it\u0027s doing?",
      "parentUuid": "cca7af83_6082a7d6",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 70,
        "endChar": 34
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "612ffeb4_89befd57",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-16T14:21:56Z",
      "side": 1,
      "message": "Thanks, that\u0027s useful feedback!\n\n\u003e this severely limits the usefulness of the feature.\n\u003e apart from the get-rid-of-huge-blobs case you already removed,\n\u003e getting rid of commits that _really_ shouldn\u0027t have been\n\u003e submitted in the first place also requires actually erasing history.\n\nYes. However these are not primary use cases for us and we will likely not want to cover those with the initial version.\n\nI agree that in general these use-cases are interesting for the community and that they could be covered by making the audit logging optional. I would propose to look into this as a follow-up project.\n\n\u003e it would be a checkbox on the review (whose state would have to be approved). \n\u003e changes without history preservation would be self-destructive: upon submission,\n\nThis sounds like ideas how to implement this, but at this point we are only defining the use-cases and are not looking into the solution yet (that\u0027s the follow-up change).",
      "parentUuid": "9c5223cc_cff6ecd4",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04093d01_b93d8c32",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2022-03-16T16:13:05Z",
      "side": 1,
      "message": "\u003e apart from the get-rid-of-huge-blobs case you already removed, getting rid of commits that _really_ shouldn\u0027t have been submitted in the first place also requires actually erasing history.\n\nWe have to persist data (huge blobs etc.) that went into the build of previous artifacts, so we can afterwards prove how binaries were made. So we explicitly don\u0027t want erase history at all.",
      "parentUuid": "612ffeb4_89befd57",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92161139_b9c1e46b",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-16T16:51:40Z",
      "side": 1,
      "message": "I\u0027m not opposed to this feature in general, but this feels like a separate feature from the rest of this doc. We already have reflogs to track updates to refs. If there\u0027s a desire to improve on a reflog, I think it deserves its own use case doc and design proposals.",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "525577eb_8797be13",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2022-03-16T19:30:36Z",
      "side": 1,
      "message": "The point here is that after the target branch has been updated, people (ie. auditors, engineers) can still inspect how the branch was changed, using the same UI that reviewers used to approve the update. That requires storing the old state of the branch.\n\nYou could do this with reflogs, but we have no UI to inspect reflogs, the reflogs have different visibility, and typically involve some sort of admin action to surface to -say- an external auditor.",
      "parentUuid": "92161139_b9c1e46b",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6b4b5a2_35abe4c7",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-03-16T20:26:17Z",
      "side": 1,
      "message": "\u003e The point here is that after the target branch has been updated, people (ie. auditors, engineers) can still inspect how the branch was changed, using the same UI that reviewers used to approve the update. That requires storing the old state of the branch.\n\nThat makes sense. Without this, the review change itself doesn\u0027t put any guarantees on preserving the old state, since to the change that state is basically just a \"Base revision\". Thanks for explaining it more.\n\nIt\u0027s a slight difference, but understanding this better now, I do think you want s/recorded/preserved/ since those are often different things.",
      "parentUuid": "525577eb_8797be13",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b3dfcce_9c3351d2",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-17T14:21:55Z",
      "side": 1,
      "message": "Right, added this explicitly as an use case now.\n\nAlso added a Non-Goals section to clarify which use cases we do not want to cover for now.",
      "parentUuid": "04093d01_b93d8c32",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35bbd7c6_c4b2f25c",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-17T14:21:55Z",
      "side": 1,
      "message": "Thanks, I rephrased this to make this clearer and also added a dedicated use-case for this.",
      "parentUuid": "b6b4b5a2_35abe4c7",
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "889766af_8dde7874",
        "filename": "pages/design-docs/push-reviews/use-cases.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-03-17T14:21:55Z",
      "side": 1,
      "message": "Actually this is about enabling users to inspect retroactively how the branch was changed (see discussion between Nasser and Han-Wen below). I improved the phrasing to make this clearer.",
      "parentUuid": "882e2eed_b5be7f1c",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 70,
        "endChar": 34
      },
      "revId": "fb42dbfe15693b9cc9cef001ea78670da79c308d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}