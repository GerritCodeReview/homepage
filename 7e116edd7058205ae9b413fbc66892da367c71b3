{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9a03d710_628a67ff",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2021-03-29T09:33:51Z",
      "side": 1,
      "message": "Does this mean that a child plugin must have at least two parent plugins?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 64
      },
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39a78372_6730e957",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2021-03-29T09:33:51Z",
      "side": 1,
      "message": "Won\u0027t this introduce complex dependency problems also?\n\n    Child-Plugin-A dependes-on Parent-Plugin-A (\u003ev2.3 \u003cv4.0) Parent-Plugin-B (v3.*)\n    Child-Plugin-B dependes-on Parent-Plugin-A (\u003ev2.*) Parent-Plugin-B (v2.*)",
      "range": {
        "startLine": 11,
        "startChar": 40,
        "endLine": 11,
        "endChar": 56
      },
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06b70598_6c86ee4a",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-03-30T15:00:27Z",
      "side": 1,
      "message": "\u003e Does this mean that a child plugin must have at least two parent plugins?\n\nYes, in this PS. The reasoning was that child plugins were only ever needed when mixing classloaders, to mix, you need at least 2. The next PS changes the model though significantly to support \"chaining\" of API calls to other plugins.",
      "parentUuid": "9a03d710_628a67ff",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 64
      },
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e198b82_422fdf8f",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-03-30T15:00:27Z",
      "side": 1,
      "message": "\u003e Won\u0027t this introduce complex dependency problems also?\n\nNo because these problems already exist. :(",
      "parentUuid": "39a78372_6730e957",
      "range": {
        "startLine": 11,
        "startChar": 40,
        "endLine": 11,
        "endChar": 56
      },
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd000cd1_a31d76fc",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2021-03-29T09:33:51Z",
      "side": 1,
      "message": "Must they be build with maven?",
      "range": {
        "startLine": 16,
        "startChar": 74,
        "endLine": 16,
        "endChar": 77
      },
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b8cf074_026d50ab",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-03-30T15:00:27Z",
      "side": 1,
      "message": "\u003e Must they be build with maven?\n\nNo, the parens were intended to mean \"like pom entries\" because I don\u0027t know the best term for that, do you?",
      "parentUuid": "cd000cd1_a31d76fc",
      "range": {
        "startLine": 16,
        "startChar": 74,
        "endLine": 16,
        "endChar": 77
      },
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34dd69d8_c4e386b8",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2021-03-29T09:33:51Z",
      "side": 1,
      "message": "Would it be enough to simply state that \"If a child plugin is mandatory, all its parents also [become|are considered|should be considered] mandatory\"",
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a63f12fa_632e491f",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-03-30T15:00:27Z",
      "side": 1,
      "message": "\u003e Would it be enough to simply state that \"If a child plugin is mandatory, all its parents also [become|are considered|should be considered] mandatory\"\n\nI think describing behavior is important to prevent confusion.",
      "parentUuid": "34dd69d8_c4e386b8",
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f06de5a9_4ad83c2a",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-03-27T21:49:11Z",
      "side": 1,
      "message": "The plugins should also not be allowed to be unloaded.",
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6085e3aa_4112843b",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-03-30T15:00:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f06de5a9_4ad83c2a",
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b179b0f7_380bbf66",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-03-27T22:20:29Z",
      "side": 1,
      "message": "* Add the ability for a plugin to specify another plugin as a mandatory dependency also? i.e. The plugin will not load unless the dependency plugin is loaded. The dependent plugin will be unloaded if the dependency plugin is unloaded. The dependency plugin may be reloaded without interrupting the service of the dependent plugin.",
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52f1082e_5b3be111",
        "filename": "pages/design-docs/inter-plugin-communication/solution-child-plugins.md",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-03-27T21:57:05Z",
      "side": 1,
      "message": "Any feature provided by a child plugin before and after reloading any of its parent plugins must never see a service interruption.",
      "revId": "7e116edd7058205ae9b413fbc66892da367c71b3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}