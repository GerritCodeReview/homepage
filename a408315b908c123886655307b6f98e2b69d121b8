{
  "comments": [
    {
      "key": {
        "uuid": "d56e8a09_2910c47e",
        "filename": "pages/design-docs/auth-extensions/diagrams/auth-flow.md",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-11-28T14:56:05Z",
      "side": 1,
      "message": "What needs to be done to see the rendered version of this?",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13bd2b29_fa2c1673",
        "filename": "pages/design-docs/auth-extensions/diagrams/auth-flow.md",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2019-12-03T18:19:04Z",
      "side": 1,
      "message": "I have installed the following extension: https://marketplace.visualstudio.com/items?itemName\u003dbierner.markdown-mermaid to the VSCode\nbut I have generated the \u0027auth-flow.svg\u0027 out of it and referenced that \u0027solution-auth-extension.md\u0027",
      "parentUuid": "d56e8a09_2910c47e",
      "tag": "autogenerated:gerrit:newWipPatchSet",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9369311f_5606dc40",
        "filename": "pages/design-docs/auth-extensions/solution-auth-extension.md",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-11-28T14:56:05Z",
      "side": 1,
      "message": "I would prefer if the solution doc is added in a follow-up change so that we can concentrate on discussion the use-cases first.",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a701d432_0860d872",
        "filename": "pages/design-docs/auth-extensions/solution-auth-extension.md",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2019-12-03T18:19:04Z",
      "side": 1,
      "message": "Moved to the follow-up change",
      "parentUuid": "9369311f_5606dc40",
      "tag": "autogenerated:gerrit:newWipPatchSet",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c947878_d47bbf57",
        "filename": "pages/design-docs/auth-extensions/solution-auth-extension.md",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-12-03T11:43:21Z",
      "side": 1,
      "message": "than",
      "range": {
        "startLine": 39,
        "startChar": 5,
        "endLine": 39,
        "endChar": 9
      },
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "557e2158_f98f9e69",
        "filename": "pages/design-docs/auth-extensions/solution-auth-extension.md",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2019-12-03T18:19:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c947878_d47bbf57",
      "range": {
        "startLine": 39,
        "startChar": 5,
        "endLine": 39,
        "endChar": 9
      },
      "tag": "autogenerated:gerrit:newWipPatchSet",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dafc481_c4ca7a0e",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-11-28T14:56:05Z",
      "side": 1,
      "message": "Maybe rephrase this to:\n\n* Enable plugins to authenticate users for WebUI login and Git operations over HTTP, e.g. against an external third-party system.\n* Allow administrators to install an auth plugin which is used for user authentication instead of the build-in authentication support that is configured via Auth types (HTTP, LDAP, OAuth, etc...).",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 61
      },
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36e34d7a_3e94e751",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2019-12-03T18:19:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7dafc481_c4ca7a0e",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 61
      },
      "tag": "autogenerated:gerrit:newWipPatchSet",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fc3f767_02e1a68b",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-11-28T14:56:05Z",
      "side": 1,
      "message": "That\u0027s probably not as easy as it sounds. E.g the reviewer suggestion uses the account index to suggest users where the display name / email matches what the user has typed. If the display names / e-mails are not stored in Gerrit, the reviewer suggestion would either not work, or would be unusably slow because it needs to contact the third-party system. If the data is only in the account index, but not otherwise stored in Gerrit, how would Gerrit know when to update the index data to prevent that it gets stale when the name/email changes in the third-party system?\n\nHow to implement this is of course part of the solution, so we can also discuss this later. Just wanted to say that I\u0027m not sure that this is feasible. Should we rather remove this use-case and replace it with something that is easier to achieve?",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 26,
        "endChar": 63
      },
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e359f37_b89ca2c5",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-12-03T11:43:21Z",
      "side": 1,
      "message": "Just to add on this, we would love to not have to store account data (such as email, display name etc) in Gerrit too, and only have this data in the user backend system, but so far we didn\u0027t have an idea how to make this work, hence I\u0027m curious on your ideas regarding this.",
      "parentUuid": "9fc3f767_02e1a68b",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 26,
        "endChar": 63
      },
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97d2c91f_ae627bce",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2019-12-03T18:19:04Z",
      "side": 1,
      "message": "We use a hybrid model:\n1. upon first successful login account gets created and data is retrieved from the 3rd party system and stored in Gerrit under dedicated schema - note that none of the secure-vital data like password or SSH keys is stored - it gets cached instead\nIOW we split user related data in the part that can be stored locally and part that has to be always retrieved from the 3rd party system\n2. cache expires in 2 cases: timeout (configurable) or when dedicated endpoint is hit by 3rd party system asking Gerrit to refresh the user data (Gerrit wipes out the cache and retrieves new data upon next login request)\n3. note that whenever any login related data (consecutive login) is retrieved Gerrit data gets updated - IOW as-accurate-as-possible approach ;)\n\nMy idea here is to NOT enforce any particular model but rather offer enough freedom to implement it in plugin... I\u0027m open on how to better express it ðŸ˜„",
      "parentUuid": "1e359f37_b89ca2c5",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 26,
        "endChar": 63
      },
      "tag": "autogenerated:gerrit:newWipPatchSet",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1a79e4e_2ae4d702",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-01-13T13:30:37Z",
      "side": 1,
      "message": "OK, that makes sense to me. Thanks for explaining. I guess these details will show up in the solution doc later.",
      "parentUuid": "97d2c91f_ae627bce",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 26,
        "endChar": 63
      },
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f98af48_928500e0",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-11-28T14:56:05Z",
      "side": 1,
      "message": "Maybe rephrase to:\n\n* Allow administrators to install multiple auth plugins at once that handle user authentication.",
      "range": {
        "startLine": 27,
        "startChar": 2,
        "endLine": 28,
        "endChar": 65
      },
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "412a4463_f8d1dbd7",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-11-28T14:56:05Z",
      "side": 1,
      "message": "I would add:\n\n* Add tests for existing auth types so that we are sure that they continue to work when the code is refactored to support the new functionality.\n* (Re)Implement the existing auth support for HTTP, LDAP, OAuth, etc... based on the new auth extension point, so that we are sure that the extension point is generic enough to support all of them and that this functionality could potentially be extracted as plugins.",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7161911e_b981689e",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-12-03T11:43:21Z",
      "side": 1,
      "message": "On another thought, adding the test is not really a secondary use case, but rather a precondition for adding the new extension point. Hence maybe that should be moved into a separate section?",
      "parentUuid": "412a4463_f8d1dbd7",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6287bae2_fca0079e",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2019-12-03T18:19:04Z",
      "side": 1,
      "message": "\u003e On another thought, adding the test is not really a secondary use case, but rather a precondition for adding the new extension point. Hence maybe that should be moved into a separate section?\n\nAdded a dedicated section for it. I guess that reimplementation through the extension point will be inevitably done implicitly down the road... can\u0027t see that these two (existing auth and extension point) efficiently coexist...",
      "parentUuid": "7161911e_b981689e",
      "tag": "autogenerated:gerrit:newWipPatchSet",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b530792f_4c8312fa",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2019-12-03T18:19:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f98af48_928500e0",
      "range": {
        "startLine": 27,
        "startChar": 2,
        "endLine": 28,
        "endChar": 65
      },
      "tag": "autogenerated:gerrit:newWipPatchSet",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2af445c_b91ca7b5",
        "filename": "pages/design-docs/auth-extensions/use-cases.md",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-01-13T13:30:37Z",
      "side": 1,
      "message": "OK, I would still like to have it mentioned here explicitly.\nTo me implementing the existing auth types based on the new extension point is proving us that the extension point interface is good and powerful enough to cover the use-cases that we support so far.",
      "parentUuid": "6287bae2_fca0079e",
      "revId": "a408315b908c123886655307b6f98e2b69d121b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}